from telebot import TeleBot
from telebot.types import KeyboardButton, ReplyKeyboardMarkup
import sqlite3
from constant import get_products_query, create_new_user_query
from utils import MenuStack
TOKEN = '5901370716:AAHAdCqATJZ6WSQRUm4buzP-fivEBdkYLuU'

bot = TeleBot(TOKEN, parse_mode = None)


def main_menu_keyboard():
    """
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –≤ –Ω–∞—à–µ–º —Ç–≥ –±–æ—Ç–µ
    :return –û–±—å–µ–∫—Ç –∫–ª–∞—Å—Å–∞ ReplyKeyboardMarkup
    """

    markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)

    cart = KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞üß∫")
    menu = KeyboardButton("–ú–µ–Ω—éüçî")
    settings = KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è")
    delivery = KeyboardButton("–î–æ—Å—Ç–∞–≤–∫–∞üöö")
    rep = KeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüìù")
    contacts = KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã‚òéÔ∏è")

    markup.add(cart)
    markup.add(menu, contacts)
    markup.add(settings, delivery, rep)

    return markup

stack = MenuStack(main_menu_keyboard())


def get_product_names() -> list:
    products = []

    try:
        conn = sqlite3.connect("Pizza_db")
        cursor = conn.cursor()
        sql = get_products_query()
        cursor.execute(sql)

        for product in cursor.fetchall():
            products.append(product[0])

    except Exception as e:
        print(e)

    return products

def menu_keyboard():
    '''—ç—Ç–æ –º–µ–Ω—é –≤—ã—Å–≤–µ—á–∏–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    :return –û–±—å–µ–∫—Ç –∫–ª–∞—Å—Å–∞ ReplyKeyboardMarkup'''

    products = get_product_names()
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    row = []
    for product in products:
        button = KeyboardButton(product)
        row.append(button)
        if len(row) == 3:
            keyboard.add(*row)
            row = []


    if row:
        keyboard.add(row[0])
    back_button = KeyboardButton("–ù–∞–∑–∞–¥üîô")
    keyboard.add(back_button)

    return keyboard

def get_user_details_keyboard(chat_id):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    phone_exist = False
    address_exist = False
    if not check_phone_number(chat_id):
        get_phone_button = KeyboardButton("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ")
        markup.add(get_phone_button)
    else:
        phone_exist = True

    if not check_address(chat_id):
        get_address_button = KeyboardButton("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å—Å")
        markup.add(get_address_button)
    else:
        address_exist = True
    if phone_exist and address_exist:
        keyboard = main_menu_keyboard()


    return  markup

def create_user(chat_id):
    try:
        conn = sqlite3.connect('Pizza_db')
        cursor = conn.cursor()
        sql = create_new_user_query(chat_id)
        cursor.execute(sql)

    except Exception as e:
        print(e)



@bot.message_handler(commands=["start"])
def start_handler(message):
    chat_id = message.chat.id

    create_user(chat_id)

    reply = f"Welcome to the hell {message.from_user.first_name} "
    bot.reply_to(message, reply, reply_markup=get_user_details_keyboard())
    print(f'Name_of_user - {message.from_user.first_name}')
    print(f'Username_of_user - @{message.from_user.username}')
    print(f'ID_user - {message.from_user.id}')

@bot.message_handler(func=lambda message: message.text == "–ú–µ–Ω—éüçî")
def menu_handler(message):
    reply = "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É"
    bot.reply_to(message, reply, reply_markup=menu_keyboard())
    stack.push(menu_keyboard())

@bot.message_handler(content_types=['text'])
def message_handler(message):

    if message.text == "–ú–µ–Ω—éüçî":
        bot.reply_to(message, '–í—ã–±–µ—Ä–∏ –ø–∏—Ü—Ü—É:üçï', reply_markup=menu_keyboard())
    if message.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è":
        bot.reply_to(message, '-–ü–æ–∫–∞ —á—Ç–æ —ç—Ç–æ:üí©-', reply_markup=back_keyboard())
    if message.text == "–ö–æ—Ä–∑–∏–Ω–∞üß∫":
        bot.reply_to(message, '-–ü–æ–∫–∞ —á—Ç–æ —ç—Ç–æ:üí©-', reply_markup=back_keyboard())
    if message.text == "–î–æ—Å—Ç–∞–≤–∫–∞üöö":
        bot.reply_to(message,
                     '–ï—Å–ª–∏ –º—ã –Ω–µ —É—Å–ø–µ–µ–º –¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ —Ç–µ—á–µ–Ω–∏–∏ 60 –º–∏–Ω—É—Ç, —Ç–æ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–∏—Ü—Ü—ÉüéÅ\n\n'
                     '- –î–æ—Å—Ç–∞–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è‚úÖ\n'
                     '- –î–æ—Å—Ç–∞–≤–∏–º –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 50.000 sumüí¥\n'
                     'P.S —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å —Ç–≥ –±–æ—Ç–∞ –¥–æ–¥–æ –ø–∏—Ü—Ü—ã')
    if message.text == "–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüìù":
        bot.reply_to(message, ':–î–æ—Ä–æ–≥–æ–π –∫–ª–∏–µ–Ω—Ç\n'
                              '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Å\n'
                              '–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –æ—Ç 1 –¥–æ 5', reply_markup=feedback_keyboard())

    if message.text == '–ù–∞–∑–∞–¥üîô':
        bot.reply_to(message, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å<b>{message.from_user.first_name}üíõ</b>!\n'
                                f'–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?', parse_mode='html', reply_markup=main_menu_keyboard())

    if message.text == 'üòä –ú–Ω–µ –≤—Å–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, 5 ‚ù§Ô∏è':
        bot.reply_to(message, '–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–∞—Å, –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –Ω–∞—à–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æü§ó\n –í–∞—àDodoPizza ‚ù§Ô∏è',
                    reply_markup=main_menu_keyboard())

    if message.text == '‚ò∫Ô∏è–ù–æ—Ä–º–∞–ª—å–Ω–æ, 4 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è':
        bot.reply_to(message, '–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å üòä. –ß—Ç–æ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å?ü§î',
                    reply_markup=back_keyboard())

    if message.text == '–ù–∞–∑–∞–¥‚¨ÖÔ∏è':
        bot.reply_to(message, '–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?üçî', reply_markup=main_menu_keyboard())
    if message.text == 'üòê –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ, 3 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è':
        bot.reply_to(message, '–ú—ã —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–∞–≤–¥–∞—Ç—å –≤–∞—à–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π.\n'
                              '–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è  üëáüèª.\n'
                              '–ú—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –≤–∞—à–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ª—É—á—à–µ  üôèüèª', reply_markup=back_keyboard())

    if message.text == "‚òπÔ∏è–ú–Ω–µ –Ω–µ –∑–∞—à–ª–æ, 2 ‚≠êÔ∏è‚≠êÔ∏è":
        bot.reply_to(message, '–ú—ã —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–ª–∏ –≤–∞—Å.\n'
                              '–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è üëáüèª.\n'
                              '–ú—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –≤–∞—à–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ª—É—á—à–µ üôèüèª', reply_markup=back_keyboard())
    if message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã‚òéÔ∏è':
        bot.reply_to(message, '- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +998(97)157-79-97\n- –ó–≤–æ–Ω–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π‚úÖ', reply_markup=main_menu_keyboard())

'''def menu_pizza_keyboard():
    markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)

    button1 = KeyboardButton('–ü–µ–ø–µ—Ä–æ–Ω–∏üçï')
    button2 = KeyboardButton('–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞üçï')
    button3 = KeyboardButton('–ì–∞–≤–∞–π—Å–∫–∞—èüçï')
    button4 = KeyboardButton('–ö–æ–º–±–æüçï')
    button5 = KeyboardButton('4 —Å—ã—Ä–∞üçï')
    button6 = KeyboardButton('–¶—ã–ø–ª–µ–Ω–æ–∫ —Ä–∞–Ω—áüçï')
    button7 = KeyboardButton('üîô')

    markup.add(button1,button2,button3)
    markup.add(button4,button5,button6)
    markup.add(button7)


    return markup'''

def feedback_keyboard():
    markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)

    button1 = KeyboardButton('üòä –ú–Ω–µ –≤—Å–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, 5 ‚ù§Ô∏è')
    button2 = KeyboardButton('‚ò∫Ô∏è–ù–æ—Ä–º–∞–ª—å–Ω–æ, 4 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è')
    button3 = KeyboardButton('üòê –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ, 3 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è')
    button4 = KeyboardButton('‚òπÔ∏è–ú–Ω–µ –Ω–µ –∑–∞—à–ª–æ, 2 ‚≠êÔ∏è‚≠êÔ∏è')

    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    markup.add(button4)


    return markup



def back_keyboard():
    markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)

    button = KeyboardButton('–ù–∞–∑–∞–¥‚¨ÖÔ∏è')
    markup.add(button)

    return markup

@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥‚¨ÖÔ∏è")
def back_handler(message):
    menu_to_go_back = stack.pop()
    bot.send_message(message.chat.id, "–ü—Ä–æ—à–ª–æ–µ –º–µ–Ω—é: ", reply_markup=menu_to_go_back)

bot.infinity_polling()























